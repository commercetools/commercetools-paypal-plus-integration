buildscript {

    // we need to share Spring boot version across buildscript and the rest of the application. Unfortunately, this
    // is only the one known way:
    // https://discuss.gradle.org/t/how-to-access-project-ext-variables-from-within-buildscript-section/5706/3
    ext.springBoot = '1.5.9.RELEASE'
    ext.grgitVersion = '2.1.1'
    ext.testLoggerVersion = '1.1.2'
    ext.dockerPackageVersion = '3.2.5'
    ext.errorPronePlugin = '0.0.13'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBoot")
        classpath("org.ajoberstar:grgit:$grgitVersion")
        classpath("com.adarshr:gradle-test-logger-plugin:$testLoggerVersion")
        classpath("net.ltgt.gradle:gradle-errorprone-plugin:$errorPronePlugin")
    }
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'net.ltgt.errorprone'

targetCompatibility = 1.8
sourceCompatibility = 1.8

version = '0.4.0-DEV' // this will be replaced by git tag version, if available

apply from: "$rootDir/gradle/version-resolver.gradle"
apply from: "$rootDir/gradle/docker-build.gradle"
apply from: "$rootDir/gradle/test-config.gradle"
apply from: "$rootDir/gradle/tasks-ordering.gradle"
apply from: "$rootDir/gradle/idea-config.gradle"


compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    version = project.version
    archiveName = "${rootProject.name}.jar"
    manifest {
        attributes("Implementation-Title": rootProject.name,
                "Implementation-Version": version)
    }
}

final depVersions = [
        springBoot         : ext.springBoot,
        commercetoolsSdkJvm: '1.27.0',
        paypalPlusSdk      : '1.14.0',
        guava              : '23.6-jre',
        apacheCollections  : '4.1',

        // error prone
        errorProneGoogle   : '2.2.0',

        // tests
        assertJ            : '3.8.0',
        systemRules        : '1.17.1',
        beforeTestRunner   : '0.1.0',
        apacheFluentHc     : '4.5.5',
]

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:${depVersions.springBoot}"

    compile "com.paypal.sdk:rest-api-sdk:${depVersions.paypalPlusSdk}"

    compile "com.commercetools.sdk.jvm.core:commercetools-models:${depVersions.commercetoolsSdkJvm}"
    compile "com.commercetools.sdk.jvm.core:commercetools-java-client:${depVersions.commercetoolsSdkJvm}"
    compile "com.commercetools.sdk.jvm.core:commercetools-convenience:${depVersions.commercetoolsSdkJvm}"
    compile "com.google.guava:guava:${depVersions.guava}"
    compile "org.apache.commons:commons-collections4:${depVersions.apacheCollections}"

    testCommonCompile("org.springframework.boot:spring-boot-starter-test:${depVersions.springBoot}") {
        exclude group: 'org.assertj', module: 'assertj-core' // below override the default outdated one with the latest
    }
    testCommonCompile "org.assertj:assertj-core:${depVersions.assertJ}"
    testCommonCompile "org.bitbucket.radistao.test:before-after-spring-test-runner:${depVersions.beforeTestRunner}"

    testIntegrationCompile "com.github.stefanbirkner:system-rules:${depVersions.systemRules}"

    testUsecasesCompile "org.apache.httpcomponents:fluent-hc:${depVersions.apacheFluentHc}"

    errorprone "com.google.errorprone:error_prone_core:${depVersions.errorProneGoogle}"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

testlogger {
    theme 'mocha'
    slowThreshold 20000
}
